# Generated by Django 4.2 on 2023-04-06 05:45

import django.core.validators
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone


class Migration(migrations.Migration):

    initial = True

    dependencies = []

    operations = [
        migrations.CreateModel(
            name="Category",
            fields=[
                ("category_id", models.AutoField(primary_key=True, serialize=False)),
                ("name", models.CharField(max_length=50)),
                ("parent_category", models.IntegerField()),
                ("path", models.CharField(max_length=50)),
                ("description", models.CharField(max_length=50)),
                (
                    "is_active",
                    models.IntegerField(
                        blank=True,
                        choices=[(1, "Active"), (0, "Inactive")],
                        default=1,
                        help_text="1->Active, 0->Inactive",
                        null=True,
                    ),
                ),
                (
                    "deleted",
                    models.IntegerField(
                        blank=True,
                        choices=[(1, "yes"), (0, "No")],
                        default=0,
                        help_text="1->yes, 0->No",
                        null=True,
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="Client",
            fields=[
                ("client_id", models.AutoField(primary_key=True, serialize=False)),
                ("client_name", models.CharField(max_length=50)),
                (
                    "contact_number",
                    models.IntegerField(
                        validators=[django.core.validators.MaxLengthValidator(10)]
                    ),
                ),
                ("email", models.EmailField(max_length=254)),
                ("created_on", models.DateTimeField(default=django.utils.timezone.now)),
                (
                    "updated_on",
                    models.DateTimeField(
                        blank=True, default=django.utils.timezone.now, null=True
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="Employee",
            fields=[
                ("employee_id", models.IntegerField(primary_key=True, serialize=False)),
                ("first_name", models.CharField(max_length=50)),
                ("last_name", models.CharField(max_length=50)),
                ("role", models.CharField(max_length=50)),
                ("address", models.CharField(max_length=50)),
                ("contact_number", models.IntegerField()),
                ("email", models.CharField(max_length=50)),
                ("profile", models.CharField(max_length=50)),
                (
                    "is_active",
                    models.IntegerField(
                        blank=True,
                        choices=[(1, "Active"), (0, "Inactive")],
                        default=1,
                        help_text="1->Active, 0->Inactive",
                        null=True,
                    ),
                ),
                (
                    "deleted",
                    models.IntegerField(
                        blank=True,
                        choices=[(1, "yes"), (0, "No")],
                        default=0,
                        help_text="1->yes, 0->No",
                        null=True,
                    ),
                ),
                ("created_on", models.DateTimeField(default=django.utils.timezone.now)),
                (
                    "updated_on",
                    models.DateTimeField(
                        blank=True, default=django.utils.timezone.now, null=True
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="Event",
            fields=[
                ("event_id", models.AutoField(primary_key=True, serialize=False)),
                ("name", models.CharField(default="None", max_length=50)),
                ("Event_from", models.DateTimeField()),
                ("Event_to", models.DateTimeField()),
                (
                    "Image",
                    models.ImageField(
                        default="None", upload_to="static/uploads/images/"
                    ),
                ),
                ("has_tickets", models.BooleanField(default=True)),
                ("total_count", models.PositiveBigIntegerField(default=0)),
                ("total_cost", models.PositiveBigIntegerField(default=0)),
                ("total_price", models.PositiveBigIntegerField(default=0)),
                ("paid_amount", models.PositiveBigIntegerField(default=0)),
                ("pending_amount", models.PositiveBigIntegerField(default=0)),
                (
                    "has_sub_events",
                    models.CharField(
                        choices=[("Yes", "Yes"), ("No", "No")],
                        default="Yes",
                        max_length=3,
                    ),
                ),
                ("created_on", models.DateTimeField(default=django.utils.timezone.now)),
                (
                    "updated_on",
                    models.DateTimeField(
                        blank=True, default=django.utils.timezone.now, null=True
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="Order",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("location_link", models.CharField(default="None", max_length=200)),
                ("event_id", models.IntegerField()),
                ("user_name", models.CharField(max_length=50)),
                ("payment_event_id", models.IntegerField(default=0)),
                (
                    "amount",
                    models.FloatField(blank=True, null=True, verbose_name="Amount"),
                ),
                (
                    "status",
                    models.CharField(
                        default="Pending", max_length=254, verbose_name="Payment Status"
                    ),
                ),
                (
                    "provider_order_id",
                    models.CharField(max_length=40, verbose_name="Order ID"),
                ),
                (
                    "payment_id",
                    models.CharField(max_length=36, verbose_name="Payment ID"),
                ),
                (
                    "signature_id",
                    models.CharField(max_length=128, verbose_name="Signature ID"),
                ),
                (
                    "email",
                    models.CharField(
                        default="demo@abc.com", max_length=128, verbose_name="Email"
                    ),
                ),
                ("user_phone", models.IntegerField(verbose_name="Phone")),
                (
                    "event_name",
                    models.CharField(max_length=128, verbose_name="Event Name"),
                ),
                (
                    "event_From",
                    models.CharField(max_length=128, verbose_name="Event Date"),
                ),
                (
                    "ticket_type",
                    models.CharField(
                        blank=True,
                        max_length=128,
                        null=True,
                        verbose_name="Ticket Type",
                    ),
                ),
                ("ticket_count", models.IntegerField(verbose_name="Ticket Count")),
                (
                    "ticket_used",
                    models.CharField(
                        blank=True,
                        default="No",
                        max_length=128,
                        null=True,
                        verbose_name="Ticket Used",
                    ),
                ),
                (
                    "save_hash",
                    models.CharField(
                        blank=True, max_length=255, null=True, verbose_name="Save Hash"
                    ),
                ),
                (
                    "save_url",
                    models.CharField(
                        blank=True, max_length=255, null=True, verbose_name="Save URL"
                    ),
                ),
                ("created_on", models.DateTimeField(default=django.utils.timezone.now)),
                (
                    "updated_on",
                    models.DateTimeField(
                        blank=True, default=django.utils.timezone.now, null=True
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="SystemConfigs",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("system_config_DATABASE_USER", models.CharField(max_length=50)),
                ("system_config_DATABASE_PASSWORD", models.CharField(max_length=50)),
                ("system_config_RAZOR_KEY_ID", models.CharField(max_length=50)),
                ("system_config_RAZOR_KEY_SECRET", models.CharField(max_length=50)),
                (
                    "system_config_PAYMENT_METHOD",
                    models.CharField(
                        choices=[
                            ("RAZORPAY", "RAZORPAY"),
                            ("PAYTM", "PAYTM"),
                            ("PAYPAL", "PAYPAL"),
                            ("CASH", "CASH"),
                        ],
                        max_length=50,
                    ),
                ),
                ("system_config_EMAIL_HOST_USER", models.CharField(max_length=50)),
                ("system_config_EMAIL_HOST_PASSWORD", models.CharField(max_length=50)),
                ("system_config_COMPANY_TITLE", models.CharField(max_length=50)),
                ("system_config_COMPANY_ADDRESS", models.CharField(max_length=50)),
                ("system_config_COMPANY_PHONE", models.CharField(max_length=50)),
                ("system_config_COMPANY_EMAIL", models.CharField(max_length=50)),
                ("system_config_COMPANY_LOGO", models.ImageField(upload_to='static/logo/', default='https://bootstrapious.com/i/snippets/sn-nav-logo/logo.png')),
                ("system_config_Currency", models.CharField(max_length=50, default='INR')),
                ("system_config_COMPANY_LANDLINE", models.CharField(max_length=50)),
                ("system_config_HOST_WEBSITE", models.CharField(max_length=250 , default='http://127.0.0.1:8000/')),
                
                ("created_on", models.DateTimeField(default=django.utils.timezone.now)),
                (
                    "updated_on",
                    models.DateTimeField(
                        blank=True, default=django.utils.timezone.now, null=True
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="Tickets",
            fields=[
                ("ticket_id", models.AutoField(primary_key=True, serialize=False)),
                (
                    "ticket_type",
                    models.CharField(
                        choices=[("VIP", "VIP"), ("BASE", "BASE")], max_length=50
                    ),
                ),
                ("ticket_price", models.IntegerField()),
                ("ticket_count", models.IntegerField()),
                ("ticket_description", models.CharField(max_length=50)),
                ("created_on", models.DateTimeField(default=django.utils.timezone.now)),
                (
                    "updated_on",
                    models.DateTimeField(
                        blank=True, default=django.utils.timezone.now, null=True
                    ),
                ),
                (
                    "event_id",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="event_management_application.event",
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="Subloca",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("address", models.CharField(max_length=250)),
                (
                    "event_id",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="event_management_application.event",
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="Seats",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("seat_name", models.CharField(max_length=50)),
                ("user_name", models.CharField(max_length=50)),
                ("seat_count", models.IntegerField()),
                ("created_on", models.DateTimeField(default=django.utils.timezone.now)),
                (
                    "updated_on",
                    models.DateTimeField(
                        blank=True, default=django.utils.timezone.now, null=True
                    ),
                ),
                (
                    "event_id",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="event_management_application.event",
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="EventLocation",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("title", models.CharField(default="None", max_length=50)),
                ("address", models.CharField(default="None", max_length=250)),
                ("street_detail", models.CharField(default="None", max_length=50)),
                ("city", models.CharField(default="None", max_length=50)),
                ("state", models.CharField(default="None", max_length=50)),
                ("country", models.CharField(default="India", max_length=50)),
                ("zipcode", models.IntegerField(default=0)),
                ("location_link", models.CharField(default="None", max_length=200)),
                (
                    "location_id",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="event_management_application.event",
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="EventEmployee",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("role_note", models.CharField(max_length=50)),
                (
                    "employee_id",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="event_management_application.employee",
                    ),
                ),
                (
                    "event_id",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="event_management_application.event",
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="EventCategory",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "catgory_id",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="event_management_application.category",
                    ),
                ),
                (
                    "event_id",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="event_management_application.event",
                    ),
                ),
            ],
        ),
        migrations.AddField(
            model_name="event",
            name="location_id",
            field=models.ForeignKey(
                blank=True,
                null=True,
                on_delete=django.db.models.deletion.CASCADE,
                to="event_management_application.eventlocation",
            ),
        ),
    ]
